{"name": "test_validLogin[admin-123123@]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom disconnected: received Inspector.detached event\n  (Session info: chrome=96.0.4664.45)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00486903+2517251]\n\tOrdinal0 [0x0041F8E1+2095329]\n\tOrdinal0 [0x00322848+1058888]\n\tOrdinal0 [0x00315AD4+1006292]\n\tOrdinal0 [0x00315716+1005334]\n\tOrdinal0 [0x00314DDA+1002970]\n\tOrdinal0 [0x00313F8D+999309]\n\tOrdinal0 [0x00314246+1000006]\n\tOrdinal0 [0x00313B35+998197]\n\tOrdinal0 [0x0031E924+1042724]\n\tOrdinal0 [0x00313AF1+998129]\n\tOrdinal0 [0x003149F6+1001974]\n\tOrdinal0 [0x00313F8D+999309]\n\tOrdinal0 [0x00314246+1000006]\n\tOrdinal0 [0x00313B35+998197]\n\tOrdinal0 [0x0031C923+1034531]\n\tOrdinal0 [0x00313AF1+998129]\n\tOrdinal0 [0x003149F6+1001974]\n\tOrdinal0 [0x00313F8D+999309]\n\tOrdinal0 [0x00314246+1000006]\n\tOrdinal0 [0x00313B35+998197]\n\tOrdinal0 [0x0031A739+1025849]\n\tOrdinal0 [0x00313AF1+998129]\n\tOrdinal0 [0x003149F6+1001974]\n\tOrdinal0 [0x00313F8D+999309]\n\tOrdinal0 [0x00314246+1000006]\n\tOrdinal0 [0x00313B35+998197]\n\tOrdinal0 [0x00319ABC+1022652]\n\tOrdinal0 [0x00313AF1+998129]\n\tOrdinal0 [0x003149F6+1001974]\n\tOrdinal0 [0x00313F8D+999309]\n\tOrdinal0 [0x00314246+1000006]\n\tOrdinal0 [0x00313B35+998197]\n\tOrdinal0 [0x0030F6ED+980717]\n\tOrdinal0 [0x00313AF1+998129]\n\tOrdinal0 [0x00313890+997520]\n\tOrdinal0 [0x00313629+996905]\n\tOrdinal0 [0x00323A60+1063520]\n\tOrdinal0 [0x0036BA7A+1358458]\n\tOrdinal0 [0x0036A71A+1353498]\n\tOrdinal0 [0x0036639B+1336219]\n\tOrdinal0 [0x003427A7+1189799]\n\tOrdinal0 [0x00343609+1193481]\n\tGetHandleVerifier [0x00615904+1577972]\n\tGetHandleVerifier [0x006C0B97+2279047]\n\tGetHandleVerifier [0x00516D09+534521]\n\tGetHandleVerifier [0x00515DB9+530601]\n\tOrdinal0 [0x00424FF9+2117625]\n\tOrdinal0 [0x004298A8+2136232]\n\tOrdinal0 [0x004299E2+2136546]\n\tOrdinal0 [0x00433541+2176321]\n\tBaseThreadInitThunk [0x773FFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D57A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D57A6E+238]", "trace": "@pytest.fixture()\n    def test_setup():\n        global driver\n>       driver=webdriver.Chrome(executable_path=\"C:\\Driver\\chromedriver.exe\")\n\ntest_login.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\TMT\\PycharmProjects\\pythonProject1\\venv\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:70: in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\nC:\\Users\\TMT\\PycharmProjects\\pythonProject1\\venv\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:93: in __init__\n    RemoteWebDriver.__init__(\nC:\\Users\\TMT\\PycharmProjects\\pythonProject1\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:268: in __init__\n    self.start_session(capabilities, browser_profile)\nC:\\Users\\TMT\\PycharmProjects\\pythonProject1\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:359: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nC:\\Users\\TMT\\PycharmProjects\\pythonProject1\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021747C5CFA0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created\\\\nfrom disconnected: ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D57A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D57A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nE       from disconnected: received Inspector.detached event\nE         (Session info: chrome=96.0.4664.45)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00486903+2517251]\nE       \tOrdinal0 [0x0041F8E1+2095329]\nE       \tOrdinal0 [0x00322848+1058888]\nE       \tOrdinal0 [0x00315AD4+1006292]\nE       \tOrdinal0 [0x00315716+1005334]\nE       \tOrdinal0 [0x00314DDA+1002970]\nE       \tOrdinal0 [0x00313F8D+999309]\nE       \tOrdinal0 [0x00314246+1000006]\nE       \tOrdinal0 [0x00313B35+998197]\nE       \tOrdinal0 [0x0031E924+1042724]\nE       \tOrdinal0 [0x00313AF1+998129]\nE       \tOrdinal0 [0x003149F6+1001974]\nE       \tOrdinal0 [0x00313F8D+999309]\nE       \tOrdinal0 [0x00314246+1000006]\nE       \tOrdinal0 [0x00313B35+998197]\nE       \tOrdinal0 [0x0031C923+1034531]\nE       \tOrdinal0 [0x00313AF1+998129]\nE       \tOrdinal0 [0x003149F6+1001974]\nE       \tOrdinal0 [0x00313F8D+999309]\nE       \tOrdinal0 [0x00314246+1000006]\nE       \tOrdinal0 [0x00313B35+998197]\nE       \tOrdinal0 [0x0031A739+1025849]\nE       \tOrdinal0 [0x00313AF1+998129]\nE       \tOrdinal0 [0x003149F6+1001974]\nE       \tOrdinal0 [0x00313F8D+999309]\nE       \tOrdinal0 [0x00314246+1000006]\nE       \tOrdinal0 [0x00313B35+998197]\nE       \tOrdinal0 [0x00319ABC+1022652]\nE       \tOrdinal0 [0x00313AF1+998129]\nE       \tOrdinal0 [0x003149F6+1001974]\nE       \tOrdinal0 [0x00313F8D+999309]\nE       \tOrdinal0 [0x00314246+1000006]\nE       \tOrdinal0 [0x00313B35+998197]\nE       \tOrdinal0 [0x0030F6ED+980717]\nE       \tOrdinal0 [0x00313AF1+998129]\nE       \tOrdinal0 [0x00313890+997520]\nE       \tOrdinal0 [0x00313629+996905]\nE       \tOrdinal0 [0x00323A60+1063520]\nE       \tOrdinal0 [0x0036BA7A+1358458]\nE       \tOrdinal0 [0x0036A71A+1353498]\nE       \tOrdinal0 [0x0036639B+1336219]\nE       \tOrdinal0 [0x003427A7+1189799]\nE       \tOrdinal0 [0x00343609+1193481]\nE       \tGetHandleVerifier [0x00615904+1577972]\nE       \tGetHandleVerifier [0x006C0B97+2279047]\nE       \tGetHandleVerifier [0x00516D09+534521]\nE       \tGetHandleVerifier [0x00515DB9+530601]\nE       \tOrdinal0 [0x00424FF9+2117625]\nE       \tOrdinal0 [0x004298A8+2136232]\nE       \tOrdinal0 [0x004299E2+2136546]\nE       \tOrdinal0 [0x00433541+2176321]\nE       \tBaseThreadInitThunk [0x773FFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D57A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D57A6E+238]\n\nC:\\Users\\TMT\\PycharmProjects\\pythonProject1\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: SessionNotCreatedException"}, "description": "Validate Tpos with valid login ", "parameters": [{"name": "username", "value": "'admin'"}, {"name": "password", "value": "'123123@'"}], "start": 1638782994735, "stop": 1638782994735, "uuid": "84c5e04c-393a-474e-8e32-10edc8593d11", "historyId": "3b5b12dad78c8775bd1723ea6f3608e9", "testCaseId": "82c040d7e14f97dac0e33ffd3f20c3c3", "fullName": "test_login#test_validLogin", "labels": [{"name": "severity", "value": "CRITICAL"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "CN1-KIEUTTT"}, {"name": "thread", "value": "15356-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}